[{"/Users/sylvaincoutrot/astro-def-front/src/component/Definitions/DefinitionsBySubject.js":"1","/Users/sylvaincoutrot/astro-def-front/src/reportWebVitals.js":"2","/Users/sylvaincoutrot/astro-def-front/src/component/Definitions/Definitions.js":"3","/Users/sylvaincoutrot/astro-def-front/src/component/Subjects/Form.js":"4","/Users/sylvaincoutrot/astro-def-front/src/actions/instance.js":"5","/Users/sylvaincoutrot/astro-def-front/src/actions/definitions.js":"6","/Users/sylvaincoutrot/astro-def-front/src/index.js":"7","/Users/sylvaincoutrot/astro-def-front/src/App.js":"8","/Users/sylvaincoutrot/astro-def-front/src/component/Definitions/Form.js":"9","/Users/sylvaincoutrot/astro-def-front/src/component/Home/Home.js":"10","/Users/sylvaincoutrot/astro-def-front/src/component/Subjects/Subjects.js":"11","/Users/sylvaincoutrot/astro-def-front/src/actions/subjects.js":"12"},{"size":4033,"mtime":1607206503069,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1606837796665,"results":"15","hashOfConfig":"14"},{"size":260,"mtime":1607119427227,"results":"16","hashOfConfig":"14"},{"size":1311,"mtime":1607132528185,"results":"17","hashOfConfig":"14"},{"size":161,"mtime":1606837830391,"results":"18","hashOfConfig":"14"},{"size":905,"mtime":1607112712942,"results":"19","hashOfConfig":"14"},{"size":288,"mtime":1607121863688,"results":"20","hashOfConfig":"14"},{"size":1476,"mtime":1607122096164,"results":"21","hashOfConfig":"14"},{"size":2970,"mtime":1607132147237,"results":"22","hashOfConfig":"14"},{"size":1966,"mtime":1607122717056,"results":"23","hashOfConfig":"14"},{"size":1325,"mtime":1607132551636,"results":"24","hashOfConfig":"14"},{"size":438,"mtime":1606837830392,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"jv62wy",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sylvaincoutrot/astro-def-front/src/component/Definitions/DefinitionsBySubject.js",["54","55"],"import React, { useEffect, useState } from 'react';\nimport { getDefinitionsFromSubject, deleteDefinition } from '../../actions/definitions';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Card from 'react-bootstrap/Card';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { useParams } from \"react-router-dom\";\n\nexport default () => {\n    const { name } = useParams();\n    const [definitions, setDefinitions] = useState(null);\n    const [alert, setAlert] = useState('');\n    const [variant, setVariant] = useState('success');\n    const [currentDef, setCurrentDef] = useState(null);\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = def => {\n        setShow(true);\n        setCurrentDef(def);\n    }\n    useEffect(() => {\n        const fetchDefBySubject = async () => {\n            const { data } = await getDefinitionsFromSubject(name);\n            setDefinitions(data);\n        }\n        fetchDefBySubject();\n    }, []);\n    const deleteDef = async (id, name) => {\n        const res = await deleteDefinition(id);\n        if (res.data) {\n            setAlert(`Definition ${name} deleted`);\n        } else {\n            setVariant('danger');\n            setAlert(`Definition ${name} not deleted : ${res.message}`);\n        };\n        setDefinitions(definitions.filter(item => item.name !== name));\n        handleClose();\n    }\n\n    return (\n        <>\n            <div  style={{padding: '10px', paddingRight: '170px', paddingLeft: '170px'}}>\n            <h1 style={{color: 'white'}}>{name}</h1>\n                {definitions ?\n                    <>\n                        <div style={{display: 'flex', flexDirection: 'row', flexWrap: 'wrap'}}>\n                            {definitions.map((definition, key) => (\n                            <>\n                                <Card key={key} style={{ width: '100rem', marginBottom: '25px', marginTop: '25px' }}>\n                                <Card.Header className=\"text-center\" ><b>{definition.name}</b></Card.Header>\n                                <Card.Body>\n                                    <Card.Text>{definition.content}</Card.Text>\n                                        <Button\n                                            variant=\"danger\"\n                                            onClick={() => handleShow(definition)}>\n                                            Delete \"{definition.name}\"\n                                        </Button>\n                                </Card.Body>\n                                    </Card>\n                </>))}\n                                    <Modal key={`modal`} show={show} onHide={handleClose}>\n                                        <Modal.Header closeButton>\n                                        <Modal.Title>Are you sure ?</Modal.Title>\n                                        </Modal.Header>\n                                        <Modal.Body>If you delete this definition it'll be no way to get it back</Modal.Body>\n                                        <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={handleClose}>\n                                            Cancel\n                                        </Button>\n                                        <Button variant=\"danger\" onClick={() =>\n                                                deleteDef(currentDef._id, currentDef.name)}>\n                                                Delete\n                                        </Button>\n                                        </Modal.Footer>\n                                    </Modal>\n                        </div>\n                            {alert && <Alert key=\"deleted\" variant={variant}>\n                                {alert}\n                            </Alert>}\n                    </>:\n                        <Spinner animation=\"border\" />}\n            </div>\n        </>\n    )};","/Users/sylvaincoutrot/astro-def-front/src/reportWebVitals.js",[],["56","57"],"/Users/sylvaincoutrot/astro-def-front/src/component/Definitions/Definitions.js",["58"],"import React from 'react';\nimport DefinitionForm from './Form';\n\nexport default () => (\n        <>\n            <div style={{padding: '10px', paddingRight: '170px', paddingLeft: '170px'}}>\n                <DefinitionForm />\n            </div>\n        </>\n    );",["59","60"],"/Users/sylvaincoutrot/astro-def-front/src/component/Subjects/Form.js",["61"],"/Users/sylvaincoutrot/astro-def-front/src/actions/instance.js",[],"/Users/sylvaincoutrot/astro-def-front/src/actions/definitions.js",[],"/Users/sylvaincoutrot/astro-def-front/src/index.js",[],"/Users/sylvaincoutrot/astro-def-front/src/App.js",[],"/Users/sylvaincoutrot/astro-def-front/src/component/Definitions/Form.js",[],"/Users/sylvaincoutrot/astro-def-front/src/component/Home/Home.js",[],"/Users/sylvaincoutrot/astro-def-front/src/component/Subjects/Subjects.js",["62"],"/Users/sylvaincoutrot/astro-def-front/src/actions/subjects.js",[],{"ruleId":"63","severity":1,"message":"64","line":10,"column":1,"nodeType":"65","endLine":86,"endColumn":8},{"ruleId":"66","severity":1,"message":"67","line":29,"column":8,"nodeType":"68","endLine":29,"endColumn":10,"suggestions":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"63","severity":1,"message":"64","line":4,"column":1,"nodeType":"65","endLine":10,"endColumn":7},{"ruleId":"70","replacedBy":"74"},{"ruleId":"72","replacedBy":"75"},{"ruleId":"63","severity":1,"message":"64","line":8,"column":1,"nodeType":"65","endLine":45,"endColumn":4},{"ruleId":"63","severity":1,"message":"64","line":8,"column":1,"nodeType":"65","endLine":34,"endColumn":8},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.","ArrayExpression",["76"],"no-native-reassign",["77"],"no-negated-in-lhs",["78"],["77"],["78"],{"desc":"79","fix":"80"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [name]",{"range":"81","text":"82"},[1076,1078],"[name]"]