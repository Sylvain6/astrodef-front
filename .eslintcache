[{"/Users/sylvaincoutrot/astro-def-front/src/component/Definitions/DefinitionsBySubject.js":"1","/Users/sylvaincoutrot/astro-def-front/src/reportWebVitals.js":"2","/Users/sylvaincoutrot/astro-def-front/src/component/Definitions/Definitions.js":"3","/Users/sylvaincoutrot/astro-def-front/src/component/Subjects/Form.js":"4","/Users/sylvaincoutrot/astro-def-front/src/actions/instance.js":"5","/Users/sylvaincoutrot/astro-def-front/src/actions/definitions.js":"6","/Users/sylvaincoutrot/astro-def-front/src/index.js":"7","/Users/sylvaincoutrot/astro-def-front/src/App.js":"8"},{"size":2349,"mtime":1607011852886,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1606837796665,"results":"11","hashOfConfig":"10"},{"size":1446,"mtime":1606837830392,"results":"12","hashOfConfig":"10"},{"size":1289,"mtime":1607008980348,"results":"13","hashOfConfig":"10"},{"size":161,"mtime":1606837830391,"results":"14","hashOfConfig":"10"},{"size":913,"mtime":1607011387637,"results":"15","hashOfConfig":"10"},{"size":288,"mtime":1606837830398,"results":"16","hashOfConfig":"10"},{"size":1444,"mtime":1607011976047,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"jv62wy",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sylvaincoutrot/astro-def-front/src/component/Definitions/DefinitionsBySubject.js",["37","38"],"import React, { useEffect, useState } from 'react';\nimport { getDefinitionsFromSubject, deleteDefinition } from '../../actions/definitions';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Card from 'react-bootstrap/Card';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport { useParams } from \"react-router-dom\";\n\nexport default () => {\n    const { name } = useParams();\n    const [definitions, setDefinitions] = useState(null);\n    const [alert, setAlert] = useState('');\n    useEffect(() => {\n        const fetchDefBySubject = async () => {\n            const { data } = await getDefinitionsFromSubject(name);\n            setDefinitions(data);\n        }\n        fetchDefBySubject();\n    }, []);\n    const deleteDef = async (id, name) => {\n        console.log(id);\n        const res = await deleteDefinition(id);\n        res.data ?\n            setAlert(`Definition ${name} deleted`) :\n            setAlert(`Definition ${name} not deleted : ${res.message}`);\n        setDefinitions(definitions.filter(item => item.name !== name));\n    }\n\n    return (\n        <>\n            <h1>All your definitions of the subject : {name}</h1>\n            <div  style={{padding: '10px', paddingRight: '170px', paddingLeft: '170px'}}>\n                {definitions ?\n                    <>\n                        <div style={{display: 'flex', flexDirection: 'row', flexWrap: 'wrap'}}>\n                            {definitions.map((definition, key) => (\n                            <Card key={key} bg='info' style={{ width: '18rem', margin: '10px' }}>\n                                <Card.Header>{definition.name}</Card.Header>\n                                <Card.Body>\n                                    <Card.Text>{definition.content}\n                                        </Card.Text>\n\n                                </Card.Body>\n                                <Button variant=\"primary\" onClick={() => deleteDef(definition._id, definition.name)}>Delete</Button>\n                            </Card>))}\n                        </div>\n                            {alert && <Alert key=\"deleted\" variant=\"success\">\n                                {alert}\n                            </Alert>}\n                    </>:\n                        <Spinner animation=\"border\" />}\n            </div>\n        </>\n    )};","/Users/sylvaincoutrot/astro-def-front/src/reportWebVitals.js",[],["39","40"],"/Users/sylvaincoutrot/astro-def-front/src/component/Definitions/Definitions.js",["41"],"/Users/sylvaincoutrot/astro-def-front/src/component/Subjects/Form.js",["42"],"import React, { useState } from 'react';\nimport { postSubject } from '../../actions/subjects';\nimport { useFormik } from 'formik';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nexport default () => {\n   const formik = useFormik({\n     initialValues: {\n        name: ''\n     },\n     onSubmit: async (values) => {\n       const response = await postSubject(values);\n       setNewSubject(response.data.name);\n       resetForm({});\n     },\n   });\n  const {\n    values,\n    handleChange,\n    handleSubmit,\n    resetForm\n  } = formik;\n    const [newSubject, setNewSubject] = useState('');\n\n    return (\n        <div>\n          <Form onSubmit={handleSubmit}>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridName\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control name=\"name\" value={values.name} onChange={handleChange} placeholder=\"Subject\" />\n              </Form.Group>\n            </Form.Row>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n        </Form>\n        {newSubject && <Button key=\"new\" variant=\"primary\" size=\"lg\" style={{ margin: '15px' }}>\n          {newSubject}\n        </Button>}\n  </div>\n)};\n","/Users/sylvaincoutrot/astro-def-front/src/actions/instance.js",[],"/Users/sylvaincoutrot/astro-def-front/src/actions/definitions.js",[],"/Users/sylvaincoutrot/astro-def-front/src/index.js",[],"/Users/sylvaincoutrot/astro-def-front/src/App.js",[],{"ruleId":"43","severity":1,"message":"44","line":9,"column":1,"nodeType":"45","endLine":54,"endColumn":8},{"ruleId":"46","severity":1,"message":"47","line":19,"column":8,"nodeType":"48","endLine":19,"endColumn":10,"suggestions":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"43","severity":1,"message":"44","line":7,"column":1,"nodeType":"45","endLine":37,"endColumn":8},{"ruleId":"43","severity":1,"message":"44","line":8,"column":1,"nodeType":"45","endLine":45,"endColumn":4},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.","ArrayExpression",["54"],"no-native-reassign",["55"],"no-negated-in-lhs",["56"],{"desc":"57","fix":"58"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [name]",{"range":"59","text":"60"},[741,743],"[name]"]