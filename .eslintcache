[{"/Users/sylvaincoutrot/astro-def-front/src/component/Definitions/DefinitionsBySubject.js":"1","/Users/sylvaincoutrot/astro-def-front/src/reportWebVitals.js":"2","/Users/sylvaincoutrot/astro-def-front/src/component/Definitions/Definitions.js":"3","/Users/sylvaincoutrot/astro-def-front/src/component/Subjects/Form.js":"4","/Users/sylvaincoutrot/astro-def-front/src/actions/instance.js":"5","/Users/sylvaincoutrot/astro-def-front/src/actions/definitions.js":"6","/Users/sylvaincoutrot/astro-def-front/src/index.js":"7","/Users/sylvaincoutrot/astro-def-front/src/App.js":"8","/Users/sylvaincoutrot/astro-def-front/src/component/Definitions/Form.js":"9","/Users/sylvaincoutrot/astro-def-front/src/component/Home/Home.js":"10","/Users/sylvaincoutrot/astro-def-front/src/component/Subjects/Subjects.js":"11","/Users/sylvaincoutrot/astro-def-front/src/actions/subjects.js":"12","/Users/sylvaincoutrot/astro-def-front/src/component/Home/UnloggedHome.js":"13"},{"size":4033,"mtime":1607206503069,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1606837796665,"results":"16","hashOfConfig":"15"},{"size":260,"mtime":1607119427227,"results":"17","hashOfConfig":"15"},{"size":1311,"mtime":1607132528185,"results":"18","hashOfConfig":"15"},{"size":161,"mtime":1606837830391,"results":"19","hashOfConfig":"15"},{"size":905,"mtime":1607112712942,"results":"20","hashOfConfig":"15"},{"size":288,"mtime":1607121863688,"results":"21","hashOfConfig":"15"},{"size":1749,"mtime":1607208006945,"results":"22","hashOfConfig":"15"},{"size":2970,"mtime":1607132147237,"results":"23","hashOfConfig":"15"},{"size":1966,"mtime":1607122717056,"results":"24","hashOfConfig":"15"},{"size":1325,"mtime":1607132551636,"results":"25","hashOfConfig":"15"},{"size":438,"mtime":1606837830392,"results":"26","hashOfConfig":"15"},{"size":1269,"mtime":1607207886787,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"jv62wy",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sylvaincoutrot/astro-def-front/src/component/Definitions/DefinitionsBySubject.js",["62","63"],"import React, { useEffect, useState } from 'react';\nimport { getDefinitionsFromSubject, deleteDefinition } from '../../actions/definitions';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Card from 'react-bootstrap/Card';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { useParams } from \"react-router-dom\";\n\nexport default () => {\n    const { name } = useParams();\n    const [definitions, setDefinitions] = useState(null);\n    const [alert, setAlert] = useState('');\n    const [variant, setVariant] = useState('success');\n    const [currentDef, setCurrentDef] = useState(null);\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = def => {\n        setShow(true);\n        setCurrentDef(def);\n    }\n    useEffect(() => {\n        const fetchDefBySubject = async () => {\n            const { data } = await getDefinitionsFromSubject(name);\n            setDefinitions(data);\n        }\n        fetchDefBySubject();\n    }, []);\n    const deleteDef = async (id, name) => {\n        const res = await deleteDefinition(id);\n        if (res.data) {\n            setAlert(`Definition ${name} deleted`);\n        } else {\n            setVariant('danger');\n            setAlert(`Definition ${name} not deleted : ${res.message}`);\n        };\n        setDefinitions(definitions.filter(item => item.name !== name));\n        handleClose();\n    }\n\n    return (\n        <>\n            <div  style={{padding: '10px', paddingRight: '170px', paddingLeft: '170px'}}>\n            <h1 style={{color: 'white'}}>{name}</h1>\n                {definitions ?\n                    <>\n                        <div style={{display: 'flex', flexDirection: 'row', flexWrap: 'wrap'}}>\n                            {definitions.map((definition, key) => (\n                            <>\n                                <Card key={key} style={{ width: '100rem', marginBottom: '25px', marginTop: '25px' }}>\n                                <Card.Header className=\"text-center\" ><b>{definition.name}</b></Card.Header>\n                                <Card.Body>\n                                    <Card.Text>{definition.content}</Card.Text>\n                                        <Button\n                                            variant=\"danger\"\n                                            onClick={() => handleShow(definition)}>\n                                            Delete \"{definition.name}\"\n                                        </Button>\n                                </Card.Body>\n                                    </Card>\n                </>))}\n                                    <Modal key={`modal`} show={show} onHide={handleClose}>\n                                        <Modal.Header closeButton>\n                                        <Modal.Title>Are you sure ?</Modal.Title>\n                                        </Modal.Header>\n                                        <Modal.Body>If you delete this definition it'll be no way to get it back</Modal.Body>\n                                        <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={handleClose}>\n                                            Cancel\n                                        </Button>\n                                        <Button variant=\"danger\" onClick={() =>\n                                                deleteDef(currentDef._id, currentDef.name)}>\n                                                Delete\n                                        </Button>\n                                        </Modal.Footer>\n                                    </Modal>\n                        </div>\n                            {alert && <Alert key=\"deleted\" variant={variant}>\n                                {alert}\n                            </Alert>}\n                    </>:\n                        <Spinner animation=\"border\" />}\n            </div>\n        </>\n    )};",["64","65"],"/Users/sylvaincoutrot/astro-def-front/src/reportWebVitals.js",[],["66","67"],"/Users/sylvaincoutrot/astro-def-front/src/component/Definitions/Definitions.js",["68"],"import React from 'react';\nimport DefinitionForm from './Form';\n\nexport default () => (\n        <>\n            <div style={{padding: '10px', paddingRight: '170px', paddingLeft: '170px'}}>\n                <DefinitionForm />\n            </div>\n        </>\n    );",["69","70"],"/Users/sylvaincoutrot/astro-def-front/src/component/Subjects/Form.js",["71"],"import React, { useState } from 'react';\nimport { postSubject } from '../../actions/subjects';\nimport { useFormik } from 'formik';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nexport default () => {\n   const formik = useFormik({\n     initialValues: {\n        name: ''\n     },\n     onSubmit: async (values) => {\n       const response = await postSubject(values);\n       setNewSubject(response.data.name);\n       resetForm({});\n     },\n   });\n  const {\n    values,\n    handleChange,\n    handleSubmit,\n    resetForm\n  } = formik;\n    const [newSubject, setNewSubject] = useState('');\n\n    return (\n        <div>\n          <Form onSubmit={handleSubmit}>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridName\">\n                <Form.Label style={{color: 'white'}}>Name</Form.Label>\n                <Form.Control name=\"name\" value={values.name} onChange={handleChange} placeholder=\"Subject\" />\n              </Form.Group>\n            </Form.Row>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n        </Form>\n        {newSubject && <Button key=\"new\" variant=\"dark\" size=\"lg\" style={{ margin: '15px' }}>\n          {newSubject}\n        </Button>}\n  </div>\n)};\n","/Users/sylvaincoutrot/astro-def-front/src/actions/instance.js",[],"/Users/sylvaincoutrot/astro-def-front/src/actions/definitions.js",[],"/Users/sylvaincoutrot/astro-def-front/src/index.js",[],"/Users/sylvaincoutrot/astro-def-front/src/App.js",["72"],"/Users/sylvaincoutrot/astro-def-front/src/component/Definitions/Form.js",[],"/Users/sylvaincoutrot/astro-def-front/src/component/Home/Home.js",[],["73","74"],"/Users/sylvaincoutrot/astro-def-front/src/component/Subjects/Subjects.js",["75"],"import React, { useEffect, useState } from 'react';\nimport getSubjects from '../../actions/subjects';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport SubjectForm from './Form';\n\n\nexport default () => {\n    const [subjects, setSubjects] = useState(null);\n    useEffect(() => {\n        const fetchSubjects = async () => {\n            const { data } = await getSubjects();\n            setSubjects(data);\n        }\n        fetchSubjects();\n    }, [])\n\n    return (\n            <div  style={{padding: '10px', paddingRight: '170px', paddingLeft: '170px'}}>\n                {subjects ?\n                    <>\n                    <SubjectForm />\n                    <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', marginTop: '100px' }}>\n                        {subjects.map((subject, key) =>\n                            <Button key={key} variant=\"dark\" size=\"lg\" style={{ margin: '15px' }} href={`/list/${subject.name}`}>\n                                {subject.name}\n                            </Button>)}\n                            </div>\n                    </>:\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>}\n            </div>\n    )};","/Users/sylvaincoutrot/astro-def-front/src/actions/subjects.js",[],"/Users/sylvaincoutrot/astro-def-front/src/component/Home/UnloggedHome.js",["76","77","78"],{"ruleId":"79","severity":1,"message":"80","line":10,"column":1,"nodeType":"81","endLine":86,"endColumn":8},{"ruleId":"82","severity":1,"message":"83","line":29,"column":8,"nodeType":"84","endLine":29,"endColumn":10,"suggestions":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"90"},{"ruleId":"88","replacedBy":"91"},{"ruleId":"79","severity":1,"message":"80","line":4,"column":1,"nodeType":"81","endLine":10,"endColumn":7},{"ruleId":"86","replacedBy":"92"},{"ruleId":"88","replacedBy":"93"},{"ruleId":"79","severity":1,"message":"80","line":8,"column":1,"nodeType":"81","endLine":45,"endColumn":4},{"ruleId":"94","severity":1,"message":"95","line":18,"column":19,"nodeType":"96","messageId":"97","endLine":18,"endColumn":28},{"ruleId":"86","replacedBy":"98"},{"ruleId":"88","replacedBy":"99"},{"ruleId":"79","severity":1,"message":"80","line":8,"column":1,"nodeType":"81","endLine":34,"endColumn":8},{"ruleId":"94","severity":1,"message":"100","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"101","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":21},{"ruleId":"94","severity":1,"message":"102","line":10,"column":10,"nodeType":"96","messageId":"97","endLine":10,"endColumn":17},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.","ArrayExpression",["103"],"no-native-reassign",["104"],"no-negated-in-lhs",["105"],["104"],["105"],["104"],["105"],"no-unused-vars","'setCookie' is assigned a value but never used.","Identifier","unusedVar",["104"],["105"],"'useState' is defined but never used.","'postSubject' is defined but never used.","'cookies' is assigned a value but never used.",{"desc":"106","fix":"107"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [name]",{"range":"108","text":"109"},[1076,1078],"[name]"]